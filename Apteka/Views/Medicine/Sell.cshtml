@model Apteka.Models.Operacja

<head>
    <title>Sell</title>
</head>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    
<h4>Operacja</h4>
<hr />
@*<d1iv ng-if="error" class="alert alert-danger">{{ error}}</div>*@
<style>
    .new-medicines div {
        margin-bottom: 20px;
        margin-left: 30px;
    }

    .medicines div {
        margin-bottom: 20px;
        margin-left: 30px;
    }

    .brutto::-webkit-inner-spin-button,
    .brutto::-webkit-outer-spin-button,
    .netto::-webkit-inner-spin-button,
    .netto::-webkit-outer-spin-button,
    .price::-webkit-inner-spin-button,
    .price::-webkit-outer-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }
</style>
@section PanelName
{
   <i class="fa fa-file-text fa-fw col-xs-1"></i><p>Wprowadź nową sprzedaż</p>
}
@section Panel
{

 
        @using (Html.BeginForm("SerializeSell", "Medicine", FormMethod.Post, new { @class = "form-horizontal", role = "form", id = "form" }))
        {
            <div class="row">
                <label for="date-input" class="col-md-3">Wprowadź leki do sprzedaży:</label>
            </div>
       
            <br />
            <div class="row">
                <table class="table" id="product-table">
                    <tr>
                        <th class="col-xs-1"> Lp. </th>
                        <th class="col-xs-5"> Nazwa leku </th>
                        <th class="col-xs-1"> Ilość </th>
                        <th class="col-xs-1"> Cena Netto </th>
                        <th class="col-xs-1"> Wartość Netto </th>
                        <th class="col-xs-1"> Vat </th>
                        <th class="col-xs-1"> Wartość Brutto </th>
                        <th class="col-xs-1"></th>
                    </tr>
                </table>
                <div class="col-md-1 pull-right">
                    <button type="button" class="btn btn-success" id="add-row-button"><span class="fa fa-plus"></span></button>
                </div>
            </div>
            <div class="row">
                <div class="col-md-7"></div>
                <label for="netto" class="col-md-2">Kwota netto:</label>
                <div class="col-md-1"></div>
                <label for="brutto" class="col-md-2">Kwota brutto:</label>
            </div>
            <div class="row inputs">
                <div class="col-md-7"></div>
                <div class="col-md-2">
                    <input id="netto" type="number" step="0.01" value="0" ng-model="facture.Netto" class="form-control" tabindex="-1" disabled />
                    <div class="text-danger"></div>
                </div>
                <div class="col-md-1"></div>
                <div class="col-md-2">
                    <input id="brutto" type="number" value="0" ng-model="facture.Brutto" class="form-control" tabindex="-1" disabled />
                </div>
            </div>
            <br />
            <div class="row">
                <div class="form-group">
                    <div class="col-md-2 pull-right">
                        <input type="submit" value="Zapisz" class="btn btn-success">
                    </div>
                </div>
            </div>
        }
}
@section PanelFooter
{

}



<script src="~/js/MedicineController.js"></script>





@*@if (ViewBag.Operation.Id_lek != 0)
{
    <div class="alert alert-success">Dodano lek o numerze @ViewBag.Operation.Id_lek w ilości @ViewBag.Operation.Rozchod</div>
}
 
@using (Html.BeginForm("SerializeSell", "Medicine", FormMethod.Post, new { @class = "form-horizontal", role = "form" })) 
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    
        <div class="form-group">
            @Html.LabelFor(model => model.Id_lek, "Nazwa leku", htmlAttributes: new { @class = "control-label col-md-4"})
            @Html.LabelFor(model => model.Rozchod, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.LabelFor(model => model.Netto, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.LabelFor(model => model.Brutto, htmlAttributes: new { @class = "control-label col-md-2" })
        </div>
        <div class="form-group">
            <div class="col-md-4">
                @Html.HiddenFor(model => model.Id_lek, htmlAttributes: new {  @id = "medicine-id" })
                @Html.TextBoxFor(model => model.Lek, new { @class = "form-control", @id="medicines"} )
                <div id="med" >
                </div>
            </div>
            <div class="col-md-2">
                @Html.EditorFor(model => model.Rozchod, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            <div class="col-md-2">
                @Html.EditorFor(model => model.Netto, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            <div class="col-md-2">
                @Html.EditorFor(model => model.Brutto, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            </div>
        <div class="form-group">
            <div class="col-md-2">
                @Html.ValidationMessageFor(model => model.Id_lek, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-2">
                @Html.ValidationMessageFor(model => model.Rozchod, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-6">
                <input type="submit" value="Zapisz" class="btn btn-default" />
            </div>
        </div>
    </div>
}*@
 